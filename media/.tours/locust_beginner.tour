{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Locust Beginner Tour",
  "description": "Build your first Locust test step by step.",
  "isPrimary": true,
  "steps": [
    {
      "title": "#1 Import Locust libraries",
      "description": "Add the necessary imports at the top of the file.\n\n```python\nfrom locust import FastHttpUser, task, tag, constant\n```\n\nClick **Insert Code** or copy/paste the snippet. Locustfiles follow Python code structure: 2 empty rows between code blocks and 4 spaces indentation.",
      "file": "locustfile_tour.py",
      "line": 1,
      "code": "from locust import FastHttpUser, task, tag, constant\n\n\n"
    },
    {
      "title": "#2 Create a user class",
      "description": "Define a user class that simulates your virtual user.\n\n```python\nclass MyUser(FastHttpUser):\n    \"\"\"Example user making a simple GET request.\"\"\"\n    wait_time = constant(1)\n```\n\nClick **Insert Code** or copy/paste inside your file (just below the imports).",
      "file": "locustfile_tour.py",
      "line": 3,
      "code": "class MyUser(FastHttpUser):\n    \"\"\"Example user making a simple GET request.\"\"\"\n    wait_time = constant(1)\n\n"
    },
    {
      "title": "#3 Add a task decorator",
      "description": "Inside your user class, mark a method as a Locust task with the `@task` decorator.\n\n```python\n    @task\n```",
      "file": "locustfile_tour.py",
      "line": 7,
      "code": "    @task\n"
    },
    {
      "title": "#4 Add the task implementation",
      "description": "Complete the method by defining a request your simulated user should perform.\n\n```python\n    def example(self):\n        self.client.get(\"/\")\n```",
      "file": "locustfile_tour.py",
      "line": 8,
      "code": "    def example(self):\n        self.client.get(\"/\")\n"
    }
  ]
}
